
func (a *Account) checkAssetQty() {
  qtys, err := request.GetAssetQtys()
  if err != nil {
    NNP.NoNewPositionsTrue("")
    util.Error(err, "CLOSING ALL POSITIONS AND SHUTTING DOWN", "...")
    request.CloseAllPositions(2, 0)
    log.Panicln("SHUTTING DOWN")
  }

  for symbol, qty := range qtys {
    var asset_class string
    if _, ok := a.assets["stock"][symbol]; ok {
      asset_class = "stock"
    } else if _, ok := a.assets["crypto"][symbol]; ok {
      asset_class = "crypto"
    } else {
      NNP.NoNewPositionsTrue("")
      util.Error(errors.New("Symbol not in asset map"),
        "CLOSING ALL POSITIONS AND SHUTTING DOWN", "...",
      )
    }

    if a.assets[asset_class][symbol].AssetQty != qty {
      NNP.NoNewPositionsTrue("")
      util.Error(errors.New("Asset qty missmatch"),
        "CLOSING ALL POSITIONS AND SHUTTING DOWN", "...",
      )
    }
  }

  log.Println("[ OK ]\tAll asset quantities match")
}
